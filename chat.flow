[{"id":"b3f30cc8.a105f","type":"template","z":"73cf1cdf.b75514","name":"Chat page","field":"payload","fieldType":"msg","format":"html","syntax":"plain","template":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Chat</title>\n  <style>\n   /* Fix user-agent */\n\n   * {\n    box-sizing: border-box;\n  }\n\n  html {\n    font-weight: 300;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  html, input {\n    font-family:\n    \"HelveticaNeue-Light\",\n    \"Helvetica Neue Light\",\n    \"Helvetica Neue\",\n    Helvetica,\n    Arial,\n    \"Lucida Grande\",\n    sans-serif;\n  }\n\n  html, body {\n    height: 100%;\n    margin: 0;\n    padding: 0;\n  }\n\n  ul {\n    list-style: none;\n    word-wrap: break-word;\n  }\n\n  /* Pages */\n\n  .pages {\n    height: 100%;\n    margin: 0;\n    padding: 0;\n    width: 100%;\n  }\n\n  .page {\n    height: 100%;\n    position: absolute;\n    width: 100%;\n  }\n\n  /* Login Page */\n\n  .login.page {\n    background-color: #000;\n  }\n\n  .login.page .form {\n    height: 100px;\n    margin-top: -100px;\n    position: absolute;\n\n    text-align: center;\n    top: 50%;\n    width: 100%;\n  }\n\n  .login.page .form .usernameInput {\n    background-color: transparent;\n    border: none;\n    border-bottom: 2px solid #fff;\n    outline: none;\n    padding-bottom: 15px;\n    text-align: center;\n    width: 400px;\n  }\n\n  .login.page .title {\n    font-size: 200%;\n  }\n\n  .login.page .usernameInput {\n    font-size: 200%;\n    letter-spacing: 3px;\n  }\n\n  .login.page .title, .login.page .usernameInput {\n    color: #fff;\n    font-weight: 100;\n  }\n\n  /* Chat page */\n\n  .chat.page {\n    display: none;\n  }\n\n  /* Font */\n\n  .messages {\n    font-size: 150%;\n  }\n\n  .inputMessage {\n    font-size: 100%;\n  }\n\n  .log {\n    color: gray;\n    font-size: 70%;\n    margin: 5px;\n    text-align: center;\n  }\n\n  /* Messages */\n\n  .chatArea {\n    height: 100%;\n    padding-bottom: 60px;\n  }\n\n  .messages {\n    height: 100%;\n    margin: 0;\n    overflow-y: scroll;\n    padding: 10px 20px 10px 20px;\n  }\n\n  .message.typing .messageBody {\n    color: gray;\n  }\n\n  .username {\n    font-weight: 700;\n    overflow: hidden;\n    padding-right: 15px;\n    text-align: right;\n  }\n\n  /* Input */\n\n  .inputMessage {\n    border: 10px solid #000;\n    bottom: 0;\n    height: 60px;\n    left: 0;\n    outline: none;\n    padding-left: 10px;\n    position: absolute;\n    right: 0;\n    width: 100%;\n  }  </style>\n</head>\n<body>\n  <ul class=\"pages\">\n    <li class=\"chat page\">\n      <div class=\"chatArea\">\n        <ul class=\"messages\"></ul>\n      </div>\n      <input class=\"inputMessage\" placeholder=\"Type here...\"/>\n      <div>\n        <p>\n          <button id=startRecord>start</button>\n          <button id=stopRecord disabled>stop</button>\n        </p>\n        <p>\n          <audio id=\"output\"></audio>\n        </p>\n\n        <!-- <p>\n          <audio id=recordedAudio></audio>\n          <a id=audioDownload></a>\n        </p> -->\n      </div>\n    </li>\n    <li class=\"login page\">\n      <div class=\"form\">\n        <h3 class=\"title\">What's your nickname?</h3>\n        <input class=\"usernameInput\" type=\"text\" maxlength=\"14\" />\n      </div>\n    </li>\n  </ul>\n\n  <!-- <script src=\"https://code.jquery.com/jquery-1.10.2.min.js\"></script> -->\n  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js\"></script>\n  \n  <script >$(function() {\n    var socketaddy = \"wss://\" + window.location.host + \"/ws/chat\";\n    // var socketaudiourl = \"wss://\" + window.location.host + \"/ws/audio\";\n\n  var FADE_TIME = 150; // ms\n  var TYPING_TIMER_LENGTH = 400; // ms\n  var COLORS = [\n  '#e21400', '#91580f', '#f8a700', '#f78b00',\n  '#58dc00', '#287b00', '#a8f07a', '#4ae8c4',\n  '#3b88eb', '#3824aa', '#a700ff', '#d300e7'\n  ];\n\n  // Initialize variables\n  var $window = $(window);\n  var $usernameInput = $('.usernameInput'); // Input for username\n  var $messages = $('.messages'); // Messages area\n  var $inputMessage = $('.inputMessage'); // Input message input box\n\n  var $loginPage = $('.login.page'); // The login page\n  var $chatPage = $('.chat.page'); // The chatroom page\n\n  // Prompt for setting a username\n  var username;\n  var connected = false;\n  var typing = false;\n  var lastTypingTime;\n  var $currentInput = $usernameInput.focus();\n\n  var socket = new WebSocket(socketaddy);\n  // var socketaudio = new WebSocket(socketaudiourl);\n\n  function addParticipantsMessage (data) {\n    var message = '';\n    if (data.numUsers === 1) {\n      message += \"there's 1 participant\";\n    } else {\n      message += \"there are \" + data.numUsers + \" participants\";\n    }\n    log(message);\n  }\n\n  // Sets the client's username\n  function setUsername () {\n    username = cleanInput($usernameInput.val().trim());\n\n    // If the username is valid\n    if (username) {\n      $loginPage.fadeOut();\n      $chatPage.show();\n      $loginPage.off('click');\n      $currentInput = $inputMessage.focus();\n\n      // Tell the server your username\n      socket.send('{\"operation\": \"add user\", \"username\":\"'+ username +'\"}');\n    }\n  }\n\n  // Sends a chat message\n  function sendMessage () {\n    var message = $inputMessage.val();\n    // Prevent markup from being injected into the message\n    message = cleanInput(message);\n    // if there is a non-empty message and a socket connection\n    if (message && connected) {\n      $inputMessage.val('');\n      addChatMessage({\n        username: username,\n        message: message\n      });\n      // tell server to execute 'new message' and send along one parameter\n      socket.send('{\"operation\": \"new message\", \"message\":\"'+ message +'\"}');\n      // socket.send('new message', message);\n    }\n  }\n\n  // Log a message\n  function log (message, options) {\n    var $el = $('<li>').addClass('log').text(message);\n    addMessageElement($el, options);\n  }\n\n  // Adds the visual chat message to the message list\n  function addChatMessage (data, options) {\n    // Don't fade the message in if there is an 'X was typing'\n    var $typingMessages = getTypingMessages(data);\n    options = options || {};\n    if ($typingMessages.length !== 0) {\n      options.fade = false;\n      $typingMessages.remove();\n    }\n\n    var $usernameDiv = $('<span class=\"username\"/>')\n    .text(data.username)\n    .css('color', getUsernameColor(data.username));\n    var $messageBodyDiv = $('<span class=\"messageBody\">')\n    .text(data.message);\n\n    var typingClass = data.typing ? 'typing' : '';\n    var $messageDiv = $('<li class=\"message\"/>')\n    .data('username', data.username)\n    .addClass(typingClass)\n    .append($usernameDiv, $messageBodyDiv);\n\n    addMessageElement($messageDiv, options);\n  }\n\n  // Adds the visual chat typing message\n  function addChatTyping (data) {\n    data.typing = true;\n    data.message = 'is typing';\n    addChatMessage(data);\n  }\n\n  // Removes the visual chat typing message\n  function removeChatTyping (data) {\n    getTypingMessages(data).fadeOut(function () {\n      $(this).remove();\n    });\n  }\n\n  // Adds a message element to the messages and scrolls to the bottom\n  // el - The element to add as a message\n  // options.fade - If the element should fade-in (default = true)\n  // options.prepend - If the element should prepend\n  //   all other messages (default = false)\n  function addMessageElement (el, options) {\n    var $el = $(el);\n\n    // Setup default options\n    if (!options) {\n      options = {};\n    }\n    if (typeof options.fade === 'undefined') {\n      options.fade = true;\n    }\n    if (typeof options.prepend === 'undefined') {\n      options.prepend = false;\n    }\n\n    // Apply options\n    if (options.fade) {\n      $el.hide().fadeIn(FADE_TIME);\n    }\n    if (options.prepend) {\n      $messages.prepend($el);\n    } else {\n      $messages.append($el);\n    }\n    $messages[0].scrollTop = $messages[0].scrollHeight;\n  }\n\n  // Prevents input from having injected markup\n  function cleanInput (input) {\n    return $('<div/>').text(input).text();\n  }\n\n  // Updates the typing event\n  function updateTyping () {\n    if (connected) {\n      if (!typing) {\n        typing = true;\n        socket.send('{\"operation\": \"typing\"}');\n\n      }\n      lastTypingTime = (new Date()).getTime();\n\n      setTimeout(function () {\n        var typingTimer = (new Date()).getTime();\n        var timeDiff = typingTimer - lastTypingTime;\n        if (timeDiff >= TYPING_TIMER_LENGTH && typing) {\n          socket.send('{\"operation\": \"stop typing\"}');\n\n          typing = false;\n        }\n      }, TYPING_TIMER_LENGTH);\n    }\n  }\n\n  // Gets the 'X is typing' messages of a user\n  function getTypingMessages (data) {\n    return $('.typing.message').filter(function (i) {\n      return $(this).data('username') === data.username;\n    });\n  }\n\n  // Gets the color of a username through our hash function\n  function getUsernameColor (username) {\n    // Compute hash code\n    var hash = 7;\n    for (var i = 0; i < username.length; i++) {\n     hash = username.charCodeAt(i) + (hash << 5) - hash;\n   }\n    // Calculate color\n    var index = Math.abs(hash % COLORS.length);\n    return COLORS[index];\n  }\n\n  // Keyboard events\n\n  $window.keydown(function (event) {\n    // Auto-focus the current input when a key is typed\n    if (!(event.ctrlKey || event.metaKey || event.altKey)) {\n      $currentInput.focus();\n    }\n    // When the client hits ENTER on their keyboard\n    if (event.which === 13) {\n      if (username) {\n        sendMessage();\n        // socket.send('{\"operation\": \"stop typing\"}');\n        typing = false;\n      } else {\n        setUsername();\n      }\n    }\n  });\n\n  $inputMessage.on('input', function() {\n    // updateTyping();\n  });\n\n  // Click events\n\n  // Focus input when clicking anywhere on login page\n  $loginPage.click(function () {\n    $currentInput.focus();\n  });\n\n  // Focus input when clicking on the message input's border\n  $inputMessage.click(function () {\n    $inputMessage.focus();\n  });\n\n  // Socket events\n\n   // Whenever the server emits 'new message', update the chat body\nsocket.onmessage = function (data) {\n  var dataRegExp = new RegExp(data.data);\n  if(!dataRegExp.test(\"socketEvent\")){\n    var content = JSON.parse(data.data)\n\n\n      // Whenever the server emits 'login', log the login message\n      if(content.socketEvent === 'login'){\n        connected = true;\n      // Display the welcome message\n      var message = \"Welcome to Chat\";\n      log(message, {\n        prepend: true\n      });\n      // addParticipantsMessage(content);\n      }else if(content.socketEvent === 'botAnswer'){\n      // Display bot message\n      addChatMessage(content);\n      };\n\n\n      // // Whenever the server emits 'user joined', log it in the chat body\n      // if(content.socketEvent === 'user joined'){\n      //   log(content.username + ' joined');\n      //   addParticipantsMessage(content);\n      // };\n\n      // // Whenever the server emits 'user left', log it in the chat body\n      // if(content.socketEvent === 'user left'){\n      //   log(content.username + ' left');\n      //   addParticipantsMessage(content);\n      //   removeChatTyping(content);\n      // };\n\n      // // Whenever the server emits 'typing', show the typing message\n      // if(content.socketEvent === 'typing'){\n      //   addChatTyping(content);\n      // };\n\n      // // Whenever the server emits 'stop typing', kill the typing message\n      // if(content.socketEvent === 'stop typing'){\n      //   removeChatTyping(content);\n      // };\n\n      if(content.socketEvent === 'disconnect'){\n        log('you have been disconnected');\n      };\n\n      if(content.socketEvent === 'reconnect'){\n        log('you have been reconnected');\n        if (username) {\n          socket.send('{\"operation\": \"add user\", \"username\":\"'+ username +'\"}');\n        }\n      };\n\n      if(content.socketEvent === 'reconnect_error'){\n        log('attempt to reconnect has failed');\n      };\n  }else{\n    $(document).ready(function(){\n      var output = document.getElementById('output')\n      // var myblob = new Blob(data, {type: \"video/webm\"}); \n      output.src = window.URL.createObjectURL(data.data)\n      output.play();\n    });\n  };\n};\n\n\n\nnavigator.mediaDevices.getUserMedia({audio:true})\n.then(stream => {\n  rec = new MediaRecorder(stream);\n  rec.ondataavailable = e => {\n    audioChunks.push(e.data);\n    console.log(e.data)\n    if (rec.state == \"inactive\"){\n      let blob = new Blob(audioChunks,{type:'audio/wav'});\n      // socket.send('{\"operation\": \"audio\", \"message\":\"'+ blob +'\"}');\n        socket.send(blob);\n        // recordedAudio.src = URL.createObjectURL(blob);\n        // recordedAudio.controls=false;\n        // recordedAudio.autoplay=true;\n        // audioDownload.href = recordedAudio.src;\n        // audioDownload.download = 'rec.wav';\n        // audioDownload.innerHTML = 'download';\n      }\n    }\n  })\n.catch(e=>console.log(e));\n\nstartRecord.onclick = e => {\n  startRecord.disabled = true;\n  stopRecord.disabled=false;\n  audioChunks = [];\n  rec.start();\n}\nstopRecord.onclick = e => {\n  startRecord.disabled = false;\n  stopRecord.disabled=true;\n  rec.stop();\n}\n\n});\n\n\n\n</script>\n</body>\n</html>\n","x":219,"y":421,"wires":[["3230b346.c6955c"]]},{"id":"f101184.37ccbe8","type":"http in","z":"73cf1cdf.b75514","name":"","url":"/chat","method":"get","upload":false,"swaggerDoc":"","x":65,"y":421,"wires":[["b3f30cc8.a105f"]]},{"id":"3230b346.c6955c","type":"http response","z":"73cf1cdf.b75514","name":"","x":363,"y":421,"wires":[]},{"id":"3b9437b0.d6acf8","type":"switch","z":"73cf1cdf.b75514","name":"checkEvent","property":"payload.operation","propertyType":"msg","rules":[{"t":"eq","v":"new message","vt":"str"},{"t":"eq","v":"add user","vt":"str"},{"t":"eq","v":"typing","vt":"str"},{"t":"eq","v":"stop typing","vt":"str"},{"t":"eq","v":"disconnect","vt":"str"}],"checkall":"false","outputs":5,"x":438,"y":176,"wires":[["d14b4d5b.39bf"],["3ec6168d.d5945a","34cbdb37.d73324"],["64f97fb.5d3548"],["64f97fb.5d3548"],["7f08f476.987f5c"]]},{"id":"3ec6168d.d5945a","type":"function","z":"73cf1cdf.b75514","name":"add user","func":"var numUsers = flow.get ('numUsers') || 0;\n++numUsers;\nglobal.set ('numUsers', numUsers);\nmsg.payload = {\n    socketEvent: \"login\", \n    numUsers: numUsers\n    };\nreturn msg;","outputs":1,"noerr":0,"x":642,"y":133,"wires":[["1bb7f534.a3059b"]]},{"id":"8212b105.04a2d","type":"debug","z":"73cf1cdf.b75514","name":"Accept/Disconnect user","active":true,"console":"false","complete":"payload","x":945,"y":132,"wires":[]},{"id":"4ee40fe5.27208","type":"debug","z":"73cf1cdf.b75514","name":"say to other","active":true,"console":"false","complete":"payload","x":904,"y":166,"wires":[]},{"id":"34cbdb37.d73324","type":"function","z":"73cf1cdf.b75514","name":"add user","func":"var numUsers = flow.get ('numUsers') || 0;\nglobal.set('username',msg.payload.username);\nmsg.payload = {\n      username: msg.payload.username,\n      numUsers: numUsers,\n      socketEvent: 'user joined'\n    };\nreturn msg;","outputs":1,"noerr":0,"x":642,"y":166,"wires":[["1bb7f534.a3059b"]]},{"id":"3cc97cb1.fbd724","type":"debug","z":"73cf1cdf.b75514","name":"tayping","active":true,"console":"false","complete":"payload","x":894,"y":199,"wires":[]},{"id":"64f97fb.5d3548","type":"function","z":"73cf1cdf.b75514","name":"typing","func":"msg.payload = {username: global.get('username')};\nreturn msg;","outputs":1,"noerr":0,"x":632,"y":197,"wires":[["1bb7f534.a3059b"]]},{"id":"7f08f476.987f5c","type":"function","z":"73cf1cdf.b75514","name":"disconnect","func":"var numUsers = flow.get ('numUsers') || 0;\n--numUsers;\nflow.set ('numUsers', numUsers);\nmsg.payload = {\n        username: global.get('username'),\n        numUsers: numUsers,\n        socketEvent: 'user left'\n      };\nreturn msg;","outputs":1,"noerr":0,"x":652,"y":229,"wires":[["1bb7f534.a3059b"]]},{"id":"d14b4d5b.39bf","type":"function","z":"73cf1cdf.b75514","name":"new message","func":"msg.payload = {username: global.get('username'),\n                message: msg.payload.message\n};\nreturn msg;","outputs":1,"noerr":0,"x":662,"y":100,"wires":[["fb395063.34e65"]]},{"id":"2b60b95e.047096","type":"debug","z":"73cf1cdf.b75514","name":"Message","active":true,"console":"false","complete":"true","x":896,"y":99,"wires":[]},{"id":"6b23713c.f110c","type":"websocket in","z":"73cf1cdf.b75514","name":"","server":"264a4844.c1e9f8","client":"","x":73,"y":186,"wires":[["8531a692.0cc498"]]},{"id":"1bb7f534.a3059b","type":"websocket out","z":"73cf1cdf.b75514","name":"","server":"264a4844.c1e9f8","client":"","x":959,"y":265,"wires":[]},{"id":"fb395063.34e65","type":"link out","z":"73cf1cdf.b75514","name":"Conversation","links":["77bb3da4.770c94"],"x":853,"y":63,"wires":[]},{"id":"3cb7fe52.3af382","type":"ffmpeg-conversion","z":"73cf1cdf.b75514","name":"audio converter","format":"wav","audiochannels":"mono","x":384.5,"y":237,"wires":[["ab1b282.6636cd8"]]},{"id":"8531a692.0cc498","type":"switch","z":"73cf1cdf.b75514","name":"","property":"payload","propertyType":"msg","rules":[{"t":"cont","v":"operation","vt":"str"},{"t":"else"}],"checkall":"true","outputs":2,"x":221.5,"y":186,"wires":[["cf05f2fa.8d39c"],["3cb7fe52.3af382"]]},{"id":"cf05f2fa.8d39c","type":"json","z":"73cf1cdf.b75514","name":"","pretty":false,"x":303.5,"y":146,"wires":[["3b9437b0.d6acf8"]]},{"id":"ab1b282.6636cd8","type":"watson-speech-to-text","z":"73cf1cdf.b75514","name":"","continuous":true,"speakerlabels":false,"lang":"pt-BR","langhidden":"","langcustom":"NoCustomisationSetting","langcustomhidden":"","band":"NarrowbandModel","bandhidden":"NarrowbandModel","password":"","payload-response":true,"default-endpoint":true,"service-endpoint":"https://stream.watsonplatform.net/speech-to-text/api","x":384,"y":271,"wires":[["889d18e.75f46e8"]]},{"id":"889d18e.75f46e8","type":"function","z":"73cf1cdf.b75514","name":"new audio message","func":"msg.payload = {username: global.get('username'),\n                message: msg.payload,\n                socketEvent: \"botAnswer\"\n};\nreturn msg;\n","outputs":1,"noerr":0,"x":681.5,"y":261,"wires":[["1bb7f534.a3059b","fb395063.34e65"]]},{"id":"264a4844.c1e9f8","type":"websocket-listener","z":"","path":"/ws/chat","wholemsg":"false"}]
